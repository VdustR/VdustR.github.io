"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[874],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(i,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7922:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(665),o=(n(9496),n(9613));const a={},l="fnm",s={unversionedId:"tools/fnm",id:"tools/fnm",title:"fnm",description:"\ud83d\ude80 Fast and simple Node.js version manager, built in Rust",source:"@site/docs/tools/fnm.md",sourceDirName:"tools",slug:"/tools/fnm",permalink:"/docs/tools/fnm",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"myAutogeneratedSidebar",previous:{title:"Ternary Operator",permalink:"/docs/sh/ternary"},next:{title:"Mac",permalink:"/docs/tools/mac"}},i={},c=[{value:"Install",id:"install",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fnm"},"fnm"),(0,o.kt)("p",null,"\ud83d\ude80 Fast and simple Node.js version manager, built in Rust"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Schniz/fnm"},"https://github.com/Schniz/fnm")),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://fnm.vercel.app/install | bash\n")),(0,o.kt)("p",null,"Auto switch to the specified version described in ",(0,o.kt)("inlineCode",{parentName:"p"},".nvmrc")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".node-version"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="~/.bashrc"',title:'"~/.bashrc"'},'  # fnm\n  export PATH=/home/v/.fnm:$PATH\n- eval "`fnm env`"\n+ eval "$(fnm env --use-on-cd)"\n')),(0,o.kt)("p",null,"Setup completions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"fnm completions --shell bash >> ~/.bashrc\n")),(0,o.kt)("p",null,"Fish shell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Setup fish:\necho "fish_add_path $HOME/.fnm" >> ~/.config/fish/conf.d/fnm.fish\n# Setup auto switch version:\necho "fnm env --use-on-cd | source" >> ~/.config/fish/conf.d/fnm.fish\n# Setup completions:\nfnm completions --shell fish >> ~/.config/fish/conf.d/fnm.fish\n')),(0,o.kt)("p",null,"Husky(",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Schniz/fnm/issues/428#issuecomment-819439988"},"workaround"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="~/.huskyrc"',title:'"~/.huskyrc"'},'export PATH="$HOME"/.fnm:"$PATH"\neval "$(fnm env --log-level=quiet | sed -e \'s/PATH="\\(.*\\)":\\$PATH/PATH="\\1:$PATH"/g\')"\n')))}u.isMDXComponent=!0}}]);